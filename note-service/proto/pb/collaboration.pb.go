// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/collaboration.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Collaboration messages
type Collaboration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NoteId        int32                  `protobuf:"varint,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	UserId        int32                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Permission    string                 `protobuf:"bytes,4,opt,name=permission,proto3" json:"permission,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Collaboration) Reset() {
	*x = Collaboration{}
	mi := &file_proto_collaboration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Collaboration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collaboration) ProtoMessage() {}

func (x *Collaboration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collaboration.ProtoReflect.Descriptor instead.
func (*Collaboration) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{0}
}

func (x *Collaboration) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Collaboration) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *Collaboration) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Collaboration) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *Collaboration) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Collaboration) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CollaborationCreation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int32                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Permission    string                 `protobuf:"bytes,3,opt,name=permission,proto3" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollaborationCreation) Reset() {
	*x = CollaborationCreation{}
	mi := &file_proto_collaboration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollaborationCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollaborationCreation) ProtoMessage() {}

func (x *CollaborationCreation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollaborationCreation.ProtoReflect.Descriptor instead.
func (*CollaborationCreation) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{1}
}

func (x *CollaborationCreation) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *CollaborationCreation) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CollaborationCreation) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type CollaborationUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permission    string                 `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollaborationUpdate) Reset() {
	*x = CollaborationUpdate{}
	mi := &file_proto_collaboration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollaborationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollaborationUpdate) ProtoMessage() {}

func (x *CollaborationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollaborationUpdate.ProtoReflect.Descriptor instead.
func (*CollaborationUpdate) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{2}
}

func (x *CollaborationUpdate) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

// Request/Response messages
type AddCollaborationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collaboration *CollaborationCreation `protobuf:"bytes,1,opt,name=collaboration,proto3" json:"collaboration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCollaborationRequest) Reset() {
	*x = AddCollaborationRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCollaborationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollaborationRequest) ProtoMessage() {}

func (x *AddCollaborationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollaborationRequest.ProtoReflect.Descriptor instead.
func (*AddCollaborationRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{3}
}

func (x *AddCollaborationRequest) GetCollaboration() *CollaborationCreation {
	if x != nil {
		return x.Collaboration
	}
	return nil
}

type AddCollaborationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCollaborationResponse) Reset() {
	*x = AddCollaborationResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCollaborationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollaborationResponse) ProtoMessage() {}

func (x *AddCollaborationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollaborationResponse.ProtoReflect.Descriptor instead.
func (*AddCollaborationResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{4}
}

func (x *AddCollaborationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateCollaborationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Collaboration *CollaborationUpdate   `protobuf:"bytes,2,opt,name=collaboration,proto3" json:"collaboration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCollaborationRequest) Reset() {
	*x = UpdateCollaborationRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCollaborationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollaborationRequest) ProtoMessage() {}

func (x *UpdateCollaborationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollaborationRequest.ProtoReflect.Descriptor instead.
func (*UpdateCollaborationRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCollaborationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCollaborationRequest) GetCollaboration() *CollaborationUpdate {
	if x != nil {
		return x.Collaboration
	}
	return nil
}

type UpdateCollaborationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCollaborationResponse) Reset() {
	*x = UpdateCollaborationResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCollaborationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollaborationResponse) ProtoMessage() {}

func (x *UpdateCollaborationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollaborationResponse.ProtoReflect.Descriptor instead.
func (*UpdateCollaborationResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCollaborationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteCollaborationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCollaborationRequest) Reset() {
	*x = DeleteCollaborationRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollaborationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollaborationRequest) ProtoMessage() {}

func (x *DeleteCollaborationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollaborationRequest.ProtoReflect.Descriptor instead.
func (*DeleteCollaborationRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCollaborationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCollaborationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCollaborationResponse) Reset() {
	*x = DeleteCollaborationResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollaborationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollaborationResponse) ProtoMessage() {}

func (x *DeleteCollaborationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollaborationResponse.ProtoReflect.Descriptor instead.
func (*DeleteCollaborationResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCollaborationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetCollaborationByNoteIdAndUserIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int32                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollaborationByNoteIdAndUserIdRequest) Reset() {
	*x = GetCollaborationByNoteIdAndUserIdRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollaborationByNoteIdAndUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborationByNoteIdAndUserIdRequest) ProtoMessage() {}

func (x *GetCollaborationByNoteIdAndUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborationByNoteIdAndUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetCollaborationByNoteIdAndUserIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{9}
}

func (x *GetCollaborationByNoteIdAndUserIdRequest) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *GetCollaborationByNoteIdAndUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetCollaborationByNoteIdAndUserIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collaboration *Collaboration         `protobuf:"bytes,1,opt,name=collaboration,proto3" json:"collaboration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollaborationByNoteIdAndUserIdResponse) Reset() {
	*x = GetCollaborationByNoteIdAndUserIdResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollaborationByNoteIdAndUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborationByNoteIdAndUserIdResponse) ProtoMessage() {}

func (x *GetCollaborationByNoteIdAndUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborationByNoteIdAndUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetCollaborationByNoteIdAndUserIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{10}
}

func (x *GetCollaborationByNoteIdAndUserIdResponse) GetCollaboration() *Collaboration {
	if x != nil {
		return x.Collaboration
	}
	return nil
}

type GetCollaborationByNoteIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int32                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollaborationByNoteIdRequest) Reset() {
	*x = GetCollaborationByNoteIdRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollaborationByNoteIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborationByNoteIdRequest) ProtoMessage() {}

func (x *GetCollaborationByNoteIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborationByNoteIdRequest.ProtoReflect.Descriptor instead.
func (*GetCollaborationByNoteIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{11}
}

func (x *GetCollaborationByNoteIdRequest) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *GetCollaborationByNoteIdRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCollaborationByNoteIdRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCollaborationByNoteIdResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Collaborations []*Collaboration       `protobuf:"bytes,1,rep,name=collaborations,proto3" json:"collaborations,omitempty"`
	Total          int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetCollaborationByNoteIdResponse) Reset() {
	*x = GetCollaborationByNoteIdResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollaborationByNoteIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborationByNoteIdResponse) ProtoMessage() {}

func (x *GetCollaborationByNoteIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborationByNoteIdResponse.ProtoReflect.Descriptor instead.
func (*GetCollaborationByNoteIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{12}
}

func (x *GetCollaborationByNoteIdResponse) GetCollaborations() []*Collaboration {
	if x != nil {
		return x.Collaborations
	}
	return nil
}

func (x *GetCollaborationByNoteIdResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetCollaborationByUserIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollaborationByUserIdRequest) Reset() {
	*x = GetCollaborationByUserIdRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollaborationByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborationByUserIdRequest) ProtoMessage() {}

func (x *GetCollaborationByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborationByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetCollaborationByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{13}
}

func (x *GetCollaborationByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetCollaborationByUserIdRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCollaborationByUserIdRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCollaborationByUserIdResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Collaborations []*Collaboration       `protobuf:"bytes,1,rep,name=collaborations,proto3" json:"collaborations,omitempty"`
	Total          int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetCollaborationByUserIdResponse) Reset() {
	*x = GetCollaborationByUserIdResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollaborationByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborationByUserIdResponse) ProtoMessage() {}

func (x *GetCollaborationByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborationByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetCollaborationByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{14}
}

func (x *GetCollaborationByUserIdResponse) GetCollaborations() []*Collaboration {
	if x != nil {
		return x.Collaborations
	}
	return nil
}

func (x *GetCollaborationByUserIdResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CheckReadPermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int32                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckReadPermissionRequest) Reset() {
	*x = CheckReadPermissionRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckReadPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReadPermissionRequest) ProtoMessage() {}

func (x *CheckReadPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReadPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckReadPermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{15}
}

func (x *CheckReadPermissionRequest) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *CheckReadPermissionRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckReadPermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasPermission bool                   `protobuf:"varint,1,opt,name=has_permission,json=hasPermission,proto3" json:"has_permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckReadPermissionResponse) Reset() {
	*x = CheckReadPermissionResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckReadPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReadPermissionResponse) ProtoMessage() {}

func (x *CheckReadPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReadPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckReadPermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{16}
}

func (x *CheckReadPermissionResponse) GetHasPermission() bool {
	if x != nil {
		return x.HasPermission
	}
	return false
}

type CheckWritePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int32                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWritePermissionRequest) Reset() {
	*x = CheckWritePermissionRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWritePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWritePermissionRequest) ProtoMessage() {}

func (x *CheckWritePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWritePermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckWritePermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{17}
}

func (x *CheckWritePermissionRequest) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *CheckWritePermissionRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckWritePermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasPermission bool                   `protobuf:"varint,1,opt,name=has_permission,json=hasPermission,proto3" json:"has_permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWritePermissionResponse) Reset() {
	*x = CheckWritePermissionResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWritePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWritePermissionResponse) ProtoMessage() {}

func (x *CheckWritePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWritePermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckWritePermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{18}
}

func (x *CheckWritePermissionResponse) GetHasPermission() bool {
	if x != nil {
		return x.HasPermission
	}
	return false
}

type RemoveCollaborationByNoteIdAndUserIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int32                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCollaborationByNoteIdAndUserIdRequest) Reset() {
	*x = RemoveCollaborationByNoteIdAndUserIdRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCollaborationByNoteIdAndUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCollaborationByNoteIdAndUserIdRequest) ProtoMessage() {}

func (x *RemoveCollaborationByNoteIdAndUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCollaborationByNoteIdAndUserIdRequest.ProtoReflect.Descriptor instead.
func (*RemoveCollaborationByNoteIdAndUserIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveCollaborationByNoteIdAndUserIdRequest) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *RemoveCollaborationByNoteIdAndUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RemoveCollaborationByNoteIdAndUserIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCollaborationByNoteIdAndUserIdResponse) Reset() {
	*x = RemoveCollaborationByNoteIdAndUserIdResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCollaborationByNoteIdAndUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCollaborationByNoteIdAndUserIdResponse) ProtoMessage() {}

func (x *RemoveCollaborationByNoteIdAndUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCollaborationByNoteIdAndUserIdResponse.ProtoReflect.Descriptor instead.
func (*RemoveCollaborationByNoteIdAndUserIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveCollaborationByNoteIdAndUserIdResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_collaboration_proto protoreflect.FileDescriptor

var file_proto_collaboration_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe7, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x69, 0x0a, 0x15, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x6b,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x37, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x28, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x29, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x64, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x73, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x64, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x73, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4e, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x61, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x61, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x1b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x68, 0x61, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x2b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74, 0x65,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x2c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xa5,
	0x07, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x24, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x5a, 0x03, 0x70, 0x62, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_collaboration_proto_rawDescOnce sync.Once
	file_proto_collaboration_proto_rawDescData []byte
)

func file_proto_collaboration_proto_rawDescGZIP() []byte {
	file_proto_collaboration_proto_rawDescOnce.Do(func() {
		file_proto_collaboration_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_collaboration_proto_rawDesc), len(file_proto_collaboration_proto_rawDesc)))
	})
	return file_proto_collaboration_proto_rawDescData
}

var file_proto_collaboration_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_collaboration_proto_goTypes = []any{
	(*Collaboration)(nil),                                // 0: pb.Collaboration
	(*CollaborationCreation)(nil),                        // 1: pb.CollaborationCreation
	(*CollaborationUpdate)(nil),                          // 2: pb.CollaborationUpdate
	(*AddCollaborationRequest)(nil),                      // 3: pb.AddCollaborationRequest
	(*AddCollaborationResponse)(nil),                     // 4: pb.AddCollaborationResponse
	(*UpdateCollaborationRequest)(nil),                   // 5: pb.UpdateCollaborationRequest
	(*UpdateCollaborationResponse)(nil),                  // 6: pb.UpdateCollaborationResponse
	(*DeleteCollaborationRequest)(nil),                   // 7: pb.DeleteCollaborationRequest
	(*DeleteCollaborationResponse)(nil),                  // 8: pb.DeleteCollaborationResponse
	(*GetCollaborationByNoteIdAndUserIdRequest)(nil),     // 9: pb.GetCollaborationByNoteIdAndUserIdRequest
	(*GetCollaborationByNoteIdAndUserIdResponse)(nil),    // 10: pb.GetCollaborationByNoteIdAndUserIdResponse
	(*GetCollaborationByNoteIdRequest)(nil),              // 11: pb.GetCollaborationByNoteIdRequest
	(*GetCollaborationByNoteIdResponse)(nil),             // 12: pb.GetCollaborationByNoteIdResponse
	(*GetCollaborationByUserIdRequest)(nil),              // 13: pb.GetCollaborationByUserIdRequest
	(*GetCollaborationByUserIdResponse)(nil),             // 14: pb.GetCollaborationByUserIdResponse
	(*CheckReadPermissionRequest)(nil),                   // 15: pb.CheckReadPermissionRequest
	(*CheckReadPermissionResponse)(nil),                  // 16: pb.CheckReadPermissionResponse
	(*CheckWritePermissionRequest)(nil),                  // 17: pb.CheckWritePermissionRequest
	(*CheckWritePermissionResponse)(nil),                 // 18: pb.CheckWritePermissionResponse
	(*RemoveCollaborationByNoteIdAndUserIdRequest)(nil),  // 19: pb.RemoveCollaborationByNoteIdAndUserIdRequest
	(*RemoveCollaborationByNoteIdAndUserIdResponse)(nil), // 20: pb.RemoveCollaborationByNoteIdAndUserIdResponse
	(*timestamppb.Timestamp)(nil),                        // 21: google.protobuf.Timestamp
}
var file_proto_collaboration_proto_depIdxs = []int32{
	21, // 0: pb.Collaboration.created_at:type_name -> google.protobuf.Timestamp
	21, // 1: pb.Collaboration.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: pb.AddCollaborationRequest.collaboration:type_name -> pb.CollaborationCreation
	2,  // 3: pb.UpdateCollaborationRequest.collaboration:type_name -> pb.CollaborationUpdate
	0,  // 4: pb.GetCollaborationByNoteIdAndUserIdResponse.collaboration:type_name -> pb.Collaboration
	0,  // 5: pb.GetCollaborationByNoteIdResponse.collaborations:type_name -> pb.Collaboration
	0,  // 6: pb.GetCollaborationByUserIdResponse.collaborations:type_name -> pb.Collaboration
	3,  // 7: pb.CollaborationService.AddCollaboration:input_type -> pb.AddCollaborationRequest
	5,  // 8: pb.CollaborationService.UpdateCollaboration:input_type -> pb.UpdateCollaborationRequest
	7,  // 9: pb.CollaborationService.DeleteCollaboration:input_type -> pb.DeleteCollaborationRequest
	9,  // 10: pb.CollaborationService.GetCollaborationByNoteIdAndUserId:input_type -> pb.GetCollaborationByNoteIdAndUserIdRequest
	11, // 11: pb.CollaborationService.GetCollaborationByNoteId:input_type -> pb.GetCollaborationByNoteIdRequest
	13, // 12: pb.CollaborationService.GetCollaborationByUserId:input_type -> pb.GetCollaborationByUserIdRequest
	15, // 13: pb.CollaborationService.CheckReadPermission:input_type -> pb.CheckReadPermissionRequest
	17, // 14: pb.CollaborationService.CheckWritePermission:input_type -> pb.CheckWritePermissionRequest
	19, // 15: pb.CollaborationService.RemoveCollaborationByNoteIdAndUserId:input_type -> pb.RemoveCollaborationByNoteIdAndUserIdRequest
	4,  // 16: pb.CollaborationService.AddCollaboration:output_type -> pb.AddCollaborationResponse
	6,  // 17: pb.CollaborationService.UpdateCollaboration:output_type -> pb.UpdateCollaborationResponse
	8,  // 18: pb.CollaborationService.DeleteCollaboration:output_type -> pb.DeleteCollaborationResponse
	10, // 19: pb.CollaborationService.GetCollaborationByNoteIdAndUserId:output_type -> pb.GetCollaborationByNoteIdAndUserIdResponse
	12, // 20: pb.CollaborationService.GetCollaborationByNoteId:output_type -> pb.GetCollaborationByNoteIdResponse
	14, // 21: pb.CollaborationService.GetCollaborationByUserId:output_type -> pb.GetCollaborationByUserIdResponse
	16, // 22: pb.CollaborationService.CheckReadPermission:output_type -> pb.CheckReadPermissionResponse
	18, // 23: pb.CollaborationService.CheckWritePermission:output_type -> pb.CheckWritePermissionResponse
	20, // 24: pb.CollaborationService.RemoveCollaborationByNoteIdAndUserId:output_type -> pb.RemoveCollaborationByNoteIdAndUserIdResponse
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_collaboration_proto_init() }
func file_proto_collaboration_proto_init() {
	if File_proto_collaboration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_collaboration_proto_rawDesc), len(file_proto_collaboration_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_collaboration_proto_goTypes,
		DependencyIndexes: file_proto_collaboration_proto_depIdxs,
		MessageInfos:      file_proto_collaboration_proto_msgTypes,
	}.Build()
	File_proto_collaboration_proto = out.File
	file_proto_collaboration_proto_goTypes = nil
	file_proto_collaboration_proto_depIdxs = nil
}
